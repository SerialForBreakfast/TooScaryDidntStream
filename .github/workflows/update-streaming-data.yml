name: Update Streaming Data

on:
  # Run when movies.json is updated
  push:
    paths:
      - 'data/movies.json'
    branches:
      - main
  
  # Run daily at 6 AM UTC to catch streaming changes
  schedule:
    - cron: '0 6 * * *'
  
  # Allow manual triggering
  workflow_dispatch:

jobs:
  update-streaming-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Fetch streaming data
      env:
        WATCHMODE_API_KEY: ${{ secrets.WATCHMODE_API_KEY }}
        TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      run: |
        python scripts/fetch_streaming_info.py
    
    - name: Generate HTML
      run: |
        python scripts/generate_html.py
    
    - name: Commit and push if changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/streaming_data.json output/index.html
        
        # Only commit if there are changes
        if ! git diff --staged --quiet; then
          git commit -m "Auto-update streaming data - $(date -u +"%Y-%m-%d %H:%M UTC")"
          git push
        else
          echo "No changes to commit"
        fi
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./output
        publish_branch: gh-pages 